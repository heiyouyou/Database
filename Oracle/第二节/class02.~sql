-- 建议SQL语言都是用大写，所有SQL语言都支持大写，有些SQL语言不支持小写，如：SYBASE
-- DDL语句：Data Definition Language 数据定义语言
-- DDL语句包括：CREATE、ALTER、DROP

-- 创建表
-- 格式：CREATE TABLE 表名(字段2名 字段类型,字段2名 字段类型)
CREATE TABLE STUDENT(
       STU_ID NUMBER(10),
       STU_NAME VARCHAR2(100),
       STU_JOIN_DATE DATE -- 日期类型：TIMESTAMP
)
-- 查询表
SELECT * FROM STUDENT
-- 增加字段
-- 格式：ALTER TABLE 表名 ADD(字段名 字段类型)
ALTER TABLE STUDENT ADD(STU_AGE NUMBER(10));
ALTER TABLE STUDENT ADD(STU_GRADE FLOAT);
-- 支持同时添加多个字段
ALTER TABLE STUDENT ADD(STU_TEACHER VARCHAR2(100),STU_AGE INT);
-- 删除字段
-- 格式：ALTER TABLE 表名 DROP(字段名)
ALTER TABLE STUDENT DROP(STU_TEACHER)
ALTER TABLE STUDENT DROP(STU_GRADE)
-- 同样支持同时删除多个字段
ALTER TABLE STUDENT DROP(STU_AGE,STU_NAME)
-- 也可以这样删除字段
-- 格式：ALTER TABLE STUDENT DROP COLUMN 字段名
ALTER TABLE STUDENT DROP COLUMN STU_AGE
ALTER TABLE STUDENT DROP COLUMN STU_TEACHER
-- 修改字段名称
-- 格式：ALTER TABLE 表名 RENAME COLUMN 旧字段名 TO 新字段名 
ALTER TABLE STUDENT RENAME COLUMN STU_AGE TO STU_NIAN
ALTER TABLE STUDENT RENAME COLUMN STU_TEACHER TO STU_TEACH
-- 修改字段属性
-- 格式：ALTER TABLE 表名 MODIFY(字段名 新字段类型)
ALTER TABLE STUDENT MODIFY(STU_AGE NUMBER(20))
-- 同样支持同时修改多个字段属性
ALTER TABLE STUDENT MODIFY(STU_TEACH CHAR(200),STU_AGE INT)
-- 修改表名
-- 格式：RENAME 旧表名 TO 新表名
RENAME STUDENT TO STUDENTS
-- 也支持这样修改表名
-- 格式：ALTER TABLE 旧的表名 RENAME TO 新的表名，MYSQL也支持
ALTER TABLE STUDENTS RENAME TO STUDENT1
-- 查询表字段
SELECT * FROM STUDENT
SELECT * FROM STUDENTS
SELECT * FROM STUDENT1
-- 删除表
-- 格式：DROP TABLE 表名
DROP TABLE STUDENT
DROP TABLE STUDENT1

-- DML语句：（Data Manipulation Language）数据操纵语言
-- DML包括：SELECT、INSERT、UPDATE、DELETE。
CREATE TABLE TEACHER(
       TEA_NAME VARCHAR2(100),
       TEA_AGE NUMBER(10),
       TEA_ID NUMBER(10)
)
-- 全部字段查询
-- 格式：SELECT * FROM 表名，这种属于查询表中所有的字段，不利于数据库优化
SELECT * FROM TEACHER
-- 部分字段查询
-- 格式：SELECT 字段名1,字段名2 FROM 表名
SELECT TEA_NAME,TEA_AGE,TEA_ID FROM TEACHER
SELECT TEA_NAME,TEA_AGE FROM TEACHER 
-- 全部插入数据
-- 格式：INSERT INTO 表名 VALUES(字段值1,字段值2,字段值3)，必须一一对应插入
INSERT INTO TEACHER VALUES('keke',30,1);
-- 部分插入数据
-- 格式：INSERT INTO 表名(字段1,字段2) VALUES(字段值1,字段值2)
INSERT INTO TEACHER(TEA_NAME,TEA_ID) VALUES('jery',2);
-- 更新字段数据
-- 格式：UPDATE 表名 SET 字段名 = 值 WHERE 可以标识某段数据的字段
UPDATE TEACHER SET TEA_NAME='IDE' WHERE TEA_ID=2
UPDATE TEACHER SET TEA_AGE=28 WHERE TEA_NAME='IDE'
ALTER TABLE TEACHER ADD(TEA_BIRTHDAY DATE)
ALTER TABLE TEACHER ADD(TEA_HOBBY VARCHAR2(100))
UPDATE TEACHER SET TEA_BIRTHDAY='24-5月-16' WHERE TEA_NAME='keke'
-- 也可以加强字段更改条件和更改字段
-- 格式：UPDATE 表名 SET 字段名=值,字段名=值 WHERE 条件1 AND/OR 条件2
UPDATE TEACHER SET TEA_NAME='Arry',TEA_AGE=31 WHERE TEA_ID=2 AND TEA_AGE=30
UPDATE TEACHER SET TEA_NAME='KEKE',TEA_AGE=30 WHERE TEA_ID=1 OR TEA_AGE=30
-- 删除字段
-- 格式：DELETE FROM 表名 WHERE 条件表达式
DELETE FROM TEACHER WHERE TEA_ID=2 AND TEA_NAME='jery' 

-- 修改日期格式
-- 格式：ALTER SESSION SET NLS_DATE_FORMAT='YYYY-MM-DD HH:MI:SS'
ALTER SESSION SET NLS_DATE_FORMAT='YYYY-MM--DD HH:MI:SS'
-- WHERE 字段 NOT IN(值)，意思就是更新不是keke这条数据的信息
UPDATE TEACHER SET TEA_BIRTHDAY='2014-4-22 11:20:21' WHERE TEA_NAME NOT IN('keke')
UPDATE TEACHER SET TEA_HOBBY='TEACH' WHERE TEA_NAME ='keke'
-- 使用 ||可以达到拼接的作用
UPDATE TEACHER SET TEA_HOBBY=TEA_HOBBY||'BALL' WHERE TEA_NAME='keke'
SELECT * FROM TEACHER
-- 查询系统时间
-- SELECT SYSDATE FROM DUAL
SELECT SYSDATE FROM DUAL
COMMIT;
